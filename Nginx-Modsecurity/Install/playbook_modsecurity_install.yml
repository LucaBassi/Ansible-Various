---
###################################################################################
# Purpose       :   Download and setup Modsecurity and CoreRulesSet for Nginx
# Author        :   Luca Bassi
# Date          :   18.10.2023
# Version       :   1.2
# Dependencies  :   
#     - build_modsecurity.sh
#     - build_nginx_connector.sh.j2 
#     - setted variable in host file
###################################################################################

#------------------------------------------------------------
#
# 0 – General Ansible configuration
#
#------------------------------------------------------------

- hosts: rp-ms.myftp.org
  
  vars:
  
    coreruleset_version: '3.3.5'

    apt_packages_install:
      - 'git'
      - 'gcc' 
      - 'make'
      - 'build-essential'
      - 'autoconf'
      - 'automake'
      - 'libtool'
      - 'libcurl4-openssl-dev'
      - 'liblua5.3-dev'
      - 'libfuzzy-dev'
      - 'ssdeep'
      - 'gettext'
      - 'pkg-config'
      - 'libpcre3'
      - 'libpcre3-dev'
      - 'libxml2'
      - 'libxml2-dev'
      - 'libcurl4'
      - 'libgeoip-dev'
      - 'libyajl-dev'
      - 'doxygen'
      - 'libpcre2-16-0'
      - 'libpcre2-dev'
      - 'libpcre2-posix3'

    apt_packages_remove:
      - 'git'
      - 'gcc' 
      - 'make'
      - 'build-essential'
      - 'autoconf'
      - 'automake'
      - 'libcurl4-openssl-dev'
      - 'liblua5.3-dev'
      - 'libfuzzy-dev'
      - 'ssdeep'
      - 'pkg-config'
      - 'libpcre3-dev'
      - 'libxml2-dev'
      - 'libgeoip-dev'
      - 'libyajl-dev'
      - 'doxygen'
      - 'libpcre2-16-0'
      - 'libpcre2-dev'
      - 'libpcre2-posix3'

  become: yes
  tasks:

#------------------------------------------------------------
#
# 1 – Apt updates
#
#------------------------------------------------------------

    - name: Update apt repo and cache on all Debian/Ubuntu boxes
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

    - name: Install Prerequisite Packages
      apt: 
        name: "{{ item }}" 
        update_cache: yes 
        state: latest
      loop: "{{apt_packages_install}}" 

    - name: Update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400 #One day

#------------------------------------------------------------
#
# 2 – Clone, extract, configure and build ModSecurity
#
#------------------------------------------------------------

    - name: make directory
      file: 
        path: /usr/local/src/nginx
        state: directory 


    - name: make directory
      file: 
        path: /usr/lib/nginx
        state: directory

    - name: make directory
      file: 
        path: /usr/lib/nginx/modules 
        state: directory 

    - name: Clone the GitHub repository
      ansible.builtin.git:
        repo: http://github.com/SpiderLabs/ModSecurity.git
        dest: /usr/local/src/nginx/ModSecurity
        force: yes
        version: v3/master

    - name: copy config file 
      template:
        src: install_files/build_modsecurity.sh
        dest: "/usr/local/src/nginx/build_modsecurity.sh"
      
    - name: Make build_modsecurity.sh executabe
      file: 
        dest: /usr/local/src/nginx/build_modsecurity.sh 
        mode: a+x

    - name: Run build_modsecurity.sh
      ansible.builtin.command: sh /usr/local/src/nginx/build_modsecurity.sh

#------------------------------------------------------------
#
# 3 - Clone the NGINX Connector for ModSecurity and Compile It as a Dynamic Module
#
#------------------------------------------------------------

    - name: Get result of "nginx -v" in bariable results
      shell: nginx -v
      register: results

    - name: Get value in format x.xx.x of Nginx version 
      set_fact: 
        nginx_version: "{{ results.stderr | regex_search(regexp,'\\1') }}"
      vars:
        regexp: '(?<=nginx\/)([\d]+[\.][\d]+[\.][\d])'
    - debug:
        var: nginx_version


    - name: Clone the GitHub repository
      ansible.builtin.git:
        repo: https://github.com/SpiderLabs/ModSecurity-nginx.git
        dest: /usr/local/src/nginx/ModSecurity-nginx
        single_branch: yes
        version: master


    - name: Download the source code corresponding to the installed version of NGINX
      ansible.builtin.get_url:
        url: http://nginx.org/download/nginx-{{nginx_version[0]}}.tar.gz
        dest: /tmp

    - name: Extract Nginx archive
      unarchive: 
        src: "/tmp/nginx-{{nginx_version[0]}}.tar.gz" 
        dest: "/usr/local/src/nginx/" 
        remote_src: yes


    - name: copy config file 
      template:
        src: install_files/build_nginx_connector.sh.j2
        dest: "/usr/local/src/nginx/build_nginx_connector.sh"
      
    - name: Make build_nginx_connector.sh executable
      ansible.builtin.file: 
        dest: /usr/local/src/nginx/build_nginx_connector.sh
        mode: a+x

    - name: make directory
      file: 
        path: /etc/nginx/modules
        state: directory 
        
    - name: Run build_nginx_connector.sh
      ansible.builtin.command: sh /usr/local/src/nginx/build_nginx_connector.sh


    - name: copy ngx_http_modsecurity_module.so in /usr/lib/nginx/modules
      copy:
        src: /usr/local/src/nginx/nginx-{{nginx_version[0]}}/objs/ngx_http_modsecurity_module.so 
        dest: /usr/lib/nginx/modules
        remote_src: yes

#------------------------------------------------------------
#
# 4 – Configure ModSecurity
#
#------------------------------------------------------------

    - name: make directory
      file: 
        path: /etc/nginx/modsec/ 
        state: directory 

    - name: Download file from a file path
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/SpiderLabs/ModSecurity/v3/master/modsecurity.conf-recommended
        dest: /etc/nginx/modsec/


    - name: Move and rename modsecurity.conf-recommended 
      ansible.builtin.command: mv /etc/nginx/modsec/modsecurity.conf-recommended /etc/nginx/modsec/modsecurity.conf

    - name: copy unicode.mapping in /etc/nginx/modsec
      copy:
        src: /usr/local/src/nginx/ModSecurity/unicode.mapping 
        dest: /etc/nginx/modsec
        remote_src: yes

#------------------------------------------------------------
#
# 5 – Modifiy Nginx configuration, backup config files, enable site
#
#------------------------------------------------------------

    - name: Refer the ModSecurity Module (at /usr/lib/nginx/modules) in /etc/nginx/nginx.conf 
      lineinfile:
        path: "/etc/nginx/nginx.conf"
        line: load_module modules/ngx_http_modsecurity_module.so;
        insertbefore: BOF
        
    - name: modify file modsecurity.conf 1
      replace:
        path: "/etc/nginx/modsec/modsecurity.conf"
        regexp: 'SecRuleEngine DetectionOnly'
        replace: 'SecRuleEngine On'

    - name: modify modsecurity.conf 2
      replace:
        path: "/etc/nginx/modsec/modsecurity.conf"
        regexp: 'SecAuditLogParts ABIJDEFHZ'
        replace: 'SecAuditLogParts ABCEFHJKZ'

# A voir avec Christian ! 

#    - name: modify modsecurity.conf 3
#      replace:
#        path: "/etc/nginx/modsec/modsecurity.conf"
#        regexp: 'SecResponseBodyAccess Off'
#        replace: 'SecResponseBodyAccess On'

#------------------------------------------------------------
#
# 6 – Download and setup CoreRulesSet
#
#------------------------------------------------------------

    - name: Download file from a file path
      ansible.builtin.get_url:
        url: https://github.com/coreruleset/coreruleset/archive/refs/tags/v{{coreruleset_version}}.tar.gz
        dest: /tmp

    - name: Extract Nginx archive
      unarchive: 
        src: "/tmp/coreruleset-{{coreruleset_version}}.tar.gz"
        dest: "/etc/nginx/modsec/" 
        remote_src: yes


    - name: rename CRS rules
      ansible.builtin.command: sudo mv /etc/nginx/modsec/coreruleset-{{coreruleset_version}}/crs-setup.conf.example /etc/nginx/modsec/coreruleset-{{coreruleset_version}}/crs-setup.conf

#------------------------------------------------------------
#
# 7 – Include HoneyPot Project API Ip blacklist
#
#------------------------------------------------------------

    - name: Include HoneyPot API blacklist
      replace:
        path: "/etc/nginx/modsec/coreruleset-{{coreruleset_version}}/crs-setup.conf"
        regexp: '#SecHttpBlKey XXXXXXXXXXXXXXXXX\n#SecAction "id:900500,\\\n#  phase:1,\\\n#  nolog,\\\n#  pass,\\\n#  t:none,\\\n#  setvar:tx.block_search_ip=1,\\\n#  setvar:tx.block_suspicious_ip=1,\\\n#  setvar:tx.block_harvester_ip=1,\\\n#  setvar:tx.block_spammer_ip=1"'
        replace: 'SecHttpBlKey {{honeypot_api_key}}\nSecAction "id:900500,\\\n  phase:1,\\\n  nolog,\\\n  pass,\\\n  t:none,\\\n  setvar:tx.block_search_ip=1,\\\n  setvar:tx.block_suspicious_ip=1,\\\n  setvar:tx.block_harvester_ip=1,\\\n  setvar:tx.block_spammer_ip=1"'

    - name: ensure file exists
      copy:
        content: ""
        dest: /etc/nginx/modsec/blacklist.txt
        force: false

#------------------------------------------------------------
#
# 8 – Set log rotaion
#
#------------------------------------------------------------

    - name: make log rotation file
      file: 
        path: /etc/logrotate.d/modsec
        state: touch

    - name: Configure logrotation
      blockinfile:
        path: /etc/logrotate.d/modsec
        block: |
          /var/log/modsec_audit.log
          {
                  rotate 31
                  daily
                  missingok
                  compress
                  delaycompress
                  notifempty
          }

#------------------------------------------------------------
#
# 9 – Finalise
#
#------------------------------------------------------------

    - name: Removes apt Packages
      apt: 
        name: "{{ item }}"
        state: absent
      become: true
      loop: "{{apt_packages_remove}}" 

    - name: Removes git Packages
      file: 
        path: "/usr/local/src/nginx"
        state: absent


    - name: Restart Nginx service
      ansible.builtin.service:
        name: nginx
        state: restarted    
      register: result

    - name: Show result
      debug:
        msg: "{{ result }}"

    - name: Hold nginx
      ansible.builtin.dpkg_selections:
        name: nginx
        selection: hold